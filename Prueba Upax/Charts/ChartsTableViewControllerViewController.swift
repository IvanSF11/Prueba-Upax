//
//  ChartsTableViewControllerViewController.swift
//  Prueba Upax
//
//  Created Ivan Soriano on 31/05/22.
//  Copyright © 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import Charts

class ChartsTableViewControllerViewController: UIViewController, ChartsTableViewControllerViewProtocol {
    
    var presenter: ChartsTableViewControllerPresenterProtocol?
    
    var data = [PieChartData]()
    
    let tableView : UITableView = {
        let table = UITableView()
        table.translatesAutoresizingMaskIntoConstraints = false
        return table
    }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        presenter?.callService()
        setView()
        setConstraints()
        setUpTable()
    }
    
    func set(data: ResponseData) {
        DispatchQueue.main.async { [weak self] in
            self?.data = data.chartData
            self?.tableView.reloadData()
        }
    }
    
    func setView(){
        view.backgroundColor = .white
        navigationItem.title = "Gráficas"
        navigationController?.navigationBar.prefersLargeTitles = true
    }
    
    func setUpTable(){
        tableView.register(ChartCell.self, forCellReuseIdentifier: ChartCell.identifier)
        tableView.rowHeight = UITableView.automaticDimension
        tableView.rowHeight = 450.0
        tableView.delegate = self
        tableView.dataSource = self
    }
    
    func setConstraints(){
        view.addSubview(tableView)
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: view.topAnchor),
            tableView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])
    }
}


extension ChartsTableViewControllerViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        data.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: ChartCell.identifier, for: indexPath) as? ChartCell else { return UITableViewCell() }
        cell.configureCell(with: data[indexPath.row])
        return cell
    }
    
}

